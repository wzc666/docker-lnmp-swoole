##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
    listen 80;

    # SSL configuration
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782
    #
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    # include snippets/snakeoil.conf;
    root /var/www/buyerserve;

    # Add index.php to the list if you are using PHP
    index index.php index.html index.htm index.nginx-debian.html;

    server_name buyer.cc;

    # location / {
    #    # Redirect everything that isn't a real file to index.php
    #    try_files $uri $uri/ /index.php$is_args$args;
    # }


    # location /ui {
    #     proxy_pass http://10.10.11.67:8090/ui/;
    # }

    add_header Access-Control-Allow-Credentials true;

    #   表示允许这个域跨域调用（客户端发送请求的域名和端口）
    #   $http_origin动态获取请求客户端请求的域   不用*的原因是带cookie的请求不支持*号
     add_header Access-Control-Allow-Origin $http_origin;

    #   表示请求头的字段 动态获取
     add_header Access-Control-Allow-Headers  $http_access_control_request_headers;

    # pass PHP scripts to FastCGI server
    #
    location ~ \.php(.*)$ {
        # 设置监听端口
        fastcgi_pass php7.4-fpm:9000;
        #
        fastcgi_index index.php;
        # 设置脚本文件请求的路径
        # 下面两句是给fastcgi权限，可以支持 ?s=/module/controller/action的url访问模式
        fastcgi_split_path_info ^((?U).+\.php)(/?.+)$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #下面两句才能真正支持 index.php/index/index/index的pathinfo模式
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        # 引入fastcgi的配置文件
        include fastcgi_params;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #	deny all;
    #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
